name: Build App

on:
  push:
    branches: "main"

permissions:
  contents: read

jobs:
  build:
    name: GHC on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
            - os: ubuntu-latest
              os-readable: linux
            - os: windows-latest
              os-readable: windows
            - os: macos-latest
              os-readable: macos-arm
            - os: macos-13
              os-readable: macos-x86

    steps:
      - uses: actions/checkout@v4

      - name: Set up GHC
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: 9.12
          # Defaults, added for clarity:
          cabal-version: 'latest'
          cabal-update: true

      - name: Configure the build
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build all --dry-run
        # The last step generates dist-newstyle/cache/plan.json for the cache key.

      - name: Restore cached dependencies
        uses: actions/cache/restore@v4
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install dependencies
        # If we had an exact cache hit, the dependencies will be up to date.
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies

      # Cache dependencies already here, so that we do not have to rebuild them should the subsequent steps fail.
      - name: Save cached dependencies
        uses: actions/cache/save@v4
        # If we had an exact cache hit, trying to save the cache would error because of key clash.
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build all

      - name: Check cabal file
        run: cabal check

      - name: Get version numberish
        id: haskellconnections-version-slug-getter
        run: echo "HC_EXEC_VERSION_SLUG=$(cabal list-bin haskellconnections | grep -o 'haskellconnections-[0-9.]*')" >> "$GITHUB_OUTPUT"

      - name: Move executable
        run: cp $(cabal list-bin haskellconnections) .

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
            name: ${{ steps.haskellconnections-version-slug-getter.outputs.HC_EXEC_VERSION_SLUG }}-build-${{matrix.os-readable}}
            path: |
                haskellconnections
                haskellconnections.exe
                readme.md
                CHANGELOG.md
